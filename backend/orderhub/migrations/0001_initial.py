# Generated by Django 4.2.7 on 2024-07-03 12:02

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('token', models.UUIDField(blank=True, editable=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'permissions': [('custom_add_user', 'Can add user'), ('custom_change_user', 'Can change user'), ('custom_delete_user', 'Can delete user')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Mesa',
            fields=[
                ('mesa_id', models.AutoField(primary_key=True, serialize=False)),
                ('numero', models.IntegerField()),
                ('capacidad', models.IntegerField()),
                ('estado', models.CharField(choices=[('libre', 'Libre'), ('ocupada', 'Ocupada'), ('reservada', 'Reservada')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurante',
            fields=[
                ('restaurante_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=200)),
                ('telefono', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('reserva_id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('numero_personas', models.IntegerField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('confirmada', 'Confirmada'), ('pendiente', 'Pendiente'), ('cancelada', 'Cancelada')], max_length=20)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserva_cliente', to='orderhub.customuser')),
                ('restaurante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.restaurante')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('pedido_id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En proceso'), ('completado', 'Completado')], max_length=20)),
                ('en_linea', models.BooleanField(default=False)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_cliente', to='orderhub.customuser')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_empleado', to='orderhub.customuser')),
                ('mesa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.mesa')),
            ],
        ),
        migrations.AddField(
            model_name='mesa',
            name='restaurante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.restaurante'),
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('factura_id', models.AutoField(primary_key=True, serialize=False)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('pagada', 'Pagada')], max_length=20)),
                ('pedido', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='orderhub.pedido')),
            ],
        ),
        migrations.CreateModel(
            name='Envios',
            fields=[
                ('envio_id', models.AutoField(primary_key=True, serialize=False)),
                ('direccion', models.CharField(max_length=200)),
                ('ciudad', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(max_length=20)),
                ('estado_envio', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_transito', 'En tr√°nsito'), ('entregado', 'Entregado')], max_length=20)),
                ('fecha_entrega', models.DateTimeField(blank=True, null=True)),
                ('pedido', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='envio', to='orderhub.pedido')),
            ],
        ),
        migrations.CreateModel(
            name='EmpleadoTurno',
            fields=[
                ('empleado_turno_id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('hora_entrada', models.TimeField()),
                ('hora_salida', models.TimeField()),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turno_empleado', to='orderhub.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('detalle_pedido_id', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad', models.IntegerField()),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.pedido')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.producto')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleFactura',
            fields=[
                ('detalle_factura_id', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad', models.IntegerField()),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.factura')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.producto')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='restaurante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderhub.restaurante'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='categoria',
            name='restaurante',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='orderhub.restaurante'),
        ),
    ]
